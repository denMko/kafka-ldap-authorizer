buildscript {
    ext.kafka_version = '3.3.1'
    ext.scala_version = '2.13'
    ext.kotlin_version = '1.7.21'
    ext.unboundid_version = '6.0.6'
    ext.caffeine_version = '3.1.2'
    ext.jackson_version = '2.14.1'
    ext.spek_version = '2.0.19'
    ext.kluent_version = '1.72'
    ext.slf4j_version = '1.7.36'
    ext.shadow_version = '7.1.2'
    ext.versions_version = '0.44.0'

    ext.java_version = '11'
}

plugins{
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version "$shadow_version"
    id 'com.github.ben-manes.versions' version "$versions_version"
}


group 'com.instaclustr.kafka.ldap'
version '1.2.0-SNAPSHOT'

sourceCompatibility = "$java_version"

test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
}

repositories {
    mavenCentral()
    // maven { url "https://dl.bintray.com/spekframework/spek-dev" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "com.unboundid:unboundid-ldapsdk:$unboundid_version"

    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jackson_version"

    implementation "org.apache.kafka:kafka_$scala_version:$kafka_version"
    implementation "com.github.ben-manes.caffeine:caffeine:$caffeine_version"
    implementation "org.slf4j:slf4j-jdk14:$slf4j_version"
    testImplementation "org.amshove.kluent:kluent:$kluent_version"
    testImplementation ("org.spekframework.spek2:spek-dsl-jvm:$spek_version")  {
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntimeOnly ("org.spekframework.spek2:spek-runner-junit5:$spek_version") {
        exclude group: 'org.jetbrains.kotlin'
    }


}

configurations.all {
    exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "$java_version"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "$java_version"
}

test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
    testLogging {
        events "passed", "skipped", "failed"
    }
}

shadowJar {
    archiveBaseName = "${project.name}-$scala_version-${kafka_version}"
    classifier = null

    dependencies {
        exclude(dependency('org.apache.kafka::'))
        exclude(dependency('com.fasterxml.jackson.core:jackson-databind:'))
        exclude(dependency('org.lz4::'))
        exclude(dependency('org.xerial.snappy::'))
        exclude(dependency('org.slf4j::'))
        exclude(dependency('com.yammer.metrics::'))
        exclude(dependency('com.101tec::'))
        exclude(dependency('org.apache.zookeeper::'))
        exclude(dependency('log4j::'))
        exclude(dependency('net.sf.jopt-simple::'))
        exclude(dependency('org.scala-lang::'))
        exclude(dependency('io.netty::'))
    }
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }
    repositories {
        maven {
            credentials {
                username findProperty("nexusUser")
                password findProperty("nexusPassword")
            }
            url findProperty("nexusURL")
        }
    }
}

task copyJarToKafka(type: Copy) {
    from findProperty("kafkaJARSrc") ?: ''
    into findProperty("kafkaJARDest") ?: ''
}
